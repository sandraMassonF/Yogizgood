{% extends 'base.html.twig' %}

{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('css/style_reservation.css') }}"/>
{% endblock %}

{% block title %}Réservations
{% endblock %}

{% block body %}
	    <h2 class="titrepage">Réservations</h2>
	<body>
	
		<section class="section">
            <div class="calendrier">
			    <div id="calendar">
                </div>
		    </div>		

			<div class="creneaux">
            <h4>Créneaux disponibles :</h4>
			{% for session in cours %}
                <a class=" btn creneau" href="{{ path('app_booking_details', {'session': session.id}) }}">
				<h4 class="date_creneau">{{ session.date|date('d/m/Y') }}
                </h4>
                    {{ session.date|date('H:i') }}<br>
				    <p>#places restantes</p>
                </a>
			{% endfor %}
			</div>

			<div class="details">	
			</div>
		</section>
		</body>
	{% endblock %}

	{% block javascripts %}
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'>
    </script>

    <script>
    // Récupérer les réservations depuis la variable PHP 'events' et les encoder en JSON
    const bookings = {{ events|json_encode|raw }};
    console.log(bookings);
    
    // Attendre que le DOM soit chargé
    document.addEventListener('DOMContentLoaded', function () {
        // Récupérer l'élément HTML avec l'ID 'calendar'
        var calendarEl = document.getElementById('calendar');
        
        // Créer une instance du calendrier FullCalendar
        var calendar = new FullCalendar.Calendar(calendarEl, {
            // Configurations du calendrier
            initialView: 'dayGridMonth',
            themeSystem: 'bootstrap5',
            events: bookings,
            locale: 'fr',
            timeZone: 'Europe/Paris',
            headerToolbar: {
                start: 'prev,next today',
                center: 'title',
                end: 'dayGridMonth,timeGridWeek'
            },
            firstDay: 1,
            businessHours: [
                {
                    daysOfWeek: [
                        1,
                        2,
                        3,
                        4,
                        5
                    ],
                    startTime: '09:00',
                    endTime: '20:00'
                }
            ],
            weekends: false,
            slotMinTime: '09:00',
            slotMaxTime: '20:00',
            allDaySlot: false,

            // Appliquer des classes CSS aux événements en fonction du type de cours
            eventClassNames: function (arg) {
                if (arg.event.extendedProps.kind == 'Présentiel') {
                    return ['bg_mint'];  // Ajouter la classe 'bg_mint'
                } else if (arg.event.extendedProps.kind == 'En ligne') {
                    return ['bg_orange'];  // Ajouter la classe 'bg_orange'
                } else if (arg.event.extendedProps.kind == 'Individuel') {
                    return ['bg_marron'];  // Ajouter la classe 'bg_marron'
                }
            },
        });

        // Afficher le calendrier
        calendar.render();
    });
</script>
	{% endblock %}

